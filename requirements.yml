---
functional:
  - Пользователь должен иметь возможность провести пробную игру без входа и регистрации
  - Пользователь должен иметь возможность зарегистрироваться в приложении
  - Пользователь должен иметь возможность зарегистрироваться в приложении с помощью github
  - Пользователь должен иметь возможность зарегистрироваться в приложении с помощью discord
  - Пользователь должен иметь возможность войти в приложение под своими учетными данными
  - Пользователь должен иметь возможность входа с помощью github
  - Пользователь должен иметь возможность входа с помощью discord
  - Пользователь должен иметь возможность выйти из под своих учетных данных в приложении
  - Приложение должно определять ранг и рейтинг игрока среди других игроков в течении всего периода существования аккаунта 
  - Пользователь должен иметь возможность сменить свое имя и название клана в приложении
  - Пользователь должен иметь возможность менять любимый язык программирования в настройках
  - Пользователь должен иметь возможность настраивать звуковое сопровождение в игре
  - Пользователь должен иметь возможность привязать свой github аккаунт 
  - Пользователь должен иметь возможность отвязать свой github аккаунт 
  - Пользователь должен иметь возможность привязать свой discord аккаунт
  - Пользователь должен иметь возможность отвязать свой discord аккаунт
  - Пользователь должен иметь возможность создать свою игру в приложении
  - Пользователь должен иметь возможность играть в созданные игры
  - Пользователь должен иметь возможность просматривать список доступных игр
  - Пользователь должен иметь возможность просматривать список турниров
  - Пользователь должен иметь возможность создавать собственные турниры
  - Пользователь должен иметь возможность участвовать в турнирах
  - Пользователь должен иметь возможность просматривать список всех проведенных в приложении игр 
  - Пользователь должен иметь возможность просматривать рейтинг всех игроков
  - Пользователь должен иметь возможность писать в общий чат всем игрокам 
  - Пользователь должен иметь возможность писать в персональных чатах другим игрокам 
  - Пользователь должен иметь возможность приглашать на игру других пользователей из лобби 
  - Пользователь должен иметь возможность откликаться на приглашения других игроков
  - Пользователь должен иметь возможность видеть игроков онлайн
  - Пользователь должен иметь возможность просматривать свой профиль и статистику о себе
  - Пользователь должен иметь возможность просматривать профили и статистику других игроков 
  - Пользователь должен иметь возможность просматривать список задач используемых в играх 
  - Пользователь должен иметь возможность просматривать каждую задачу отдельно 
  - Пользователь должен иметь возможность создавать собственные задачи и редактировать их
  - Пользователь должен иметь возможность создавать собственные пакеты задач и редактировать эти пакеты 
  - Пользователь должен иметь возможность восстановить пароль в случае утраты
  - Пользователь должен иметь возможность приобретения премиум подписки
non-functional:
  - description page:
    - Приложение должно иметь стартовую-презентационную страницу 
    - Самое первое действие пользователя на странице должно вызывать всплывающее окно с предложение установить расширение для chrome
    - Стартовая-презентационная страница должна иметь ссылки на страницу регистрации, входа и простой пробной игры
  - header:
    - Приложение должно иметь шапку с логотипом и кнопки sign in и sign up для неавторизованных пользователей 
    - Кнопка sign in должна вести на страницу авторизации 
    - Кнопка sign up должна вести на страницу регистрации
    - Начатие на логотип должно вести на стартовую-презентационную страницу если пользователь не авторизован 
    - Начатие на логотип должно вести на главную страницу (lobby) если пользователь авторизован
    - Приложение Должно иметь шапку с логотипом, количеством игроков онлайн, кнопкой для просмотра приглашений, никнеймом, рангом и аватаркой для авторизованных пользователей
    - Кнопка для просмотра приглашений должна отображаться с подсказкой числа приглашений (если приглашений нет, подсказка не отображается)
    - Кнопка для просмотра приглашений при нажатии раскрывает список приглашений с информацией о том кто пригласил, сложности игры и возможностью принять или отклонить каждое приглашение
    - Список приглашений должен закрываться при нажатии в любой области экрана за исключением кнопки для просмотра приглашений
    - В случае отсутствия приглашений при нажатии на кнопку для просмотра приглашений должна появляться подсказка "No Invites"
    - Нажатие на блок с никнеймом, рангом и аватаркой должно раскрывать навигационное меню
    - Навигационное меню должно закрываться при нажатие в любой области экрана кроме самого меню
    - Навигационное меню должно содержать ссылки my profile, settings, users rating, tasks, tournaments, sourceCode, hexlet, join discord, tg#codebattle, sing out
    - Ссылка my profile должна вести на страницу с информацией об авторизованном пользователе 
    - Ссылка settings должна вести на страницу настроек приложения
    - Ссылка users rating должна вести на страницу с рейтингом игроков 
    - Ссылка tasks должна вести на страницу со списком всех задач на сайте 
    - Ссылка tournaments должна вести на страницу просмотра списка турниров с формой для создания новых турниров
    - Ссылка sourceCode ведет на страницу приложения на github
    - Ссылка hexlet ведет на главную страницу сайта hexlet
    - Ссылка join discord ведет на страницу с приглашением присоединиться к дискорд серверу
    - Ссылка tg#codebattle ведет в телеграм чат сообщества хекслет по теме codebattle
    - Ссылка sing out разлогинит пользователя 
  - user page:
    - Страница любого пользователя должна содержать аватарку пользователя, nickname, язык программирования, дату регистрации, ссылку на github (если привязан), достижения, панель с вкладками statistics и completed games
    - Ссылка на github должна вести на привязанный пользователем github аккаунт 
    - Пользователь должен иметь возможность переключаться между вкладками statistics и completed games
    - Панель на вкладке statistics должна содержать ранг игрока, рейтинг, информацию о количестве сыгранных игр, круговую диаграмму языков по частоте использования, треугольную координатную диаграмму (побед, поражений и сдач), график активности игрока
    - При наведении на круговую диаграмму языков по частоте использования должна появляться подсказка с самым часто используемым языком и количеством его использований в играх
    - При наведении на ось won треугольной координатной диаграммы (побед, поражений и сдач) должна появляться подсказка с количеством побед
    - При наведении на ось lost треугольной координатной диаграммы (побед, поражений и сдач) должна появляться подсказка с количеством поражений
    - При наведении на ось gaveUp треугольной координатной диаграммы (побед, поражений и сдач) должна появляться подсказка с количеством сдач
    - Панель на вкладке completed games должна состоять из списка проведенных игр в табличной форме со столбцами level, players, date, actions
    - Столбец action должен содержать кнопку show для отображения страницы проведенной игры
    - Кнопка show должна вести на страницу проведенной игры для премиум пользователей
    - Кнопка show должна отображать подсказку что данный контент только для премиум пользователей если текущий пользователь не имеет подписки
    - Панель на вкладке completed games должна содержать информацию о количестве сыгранных игр
  - settings page: 
    - Страница настроек должна состоять из полей для изменения имени и названия клана, выпадающего списка с выбором языка программирования, выбора типа и громкости звукового сопровождения, кнопкой save и ссылками для подключения и отключения аккаунтов github и discord
    - Поле для изменения имени yser name должно иметь валидацию по длине (от 3 до 16 символов)
    - Поле для изменения имени yser name должно иметь валидацию в случае пустого поля
    - Поле для изменения имени yser name должно иметь валидацию на наличие пробелов в начале и в конце значения 
    - Нажатие на поля с текущим языком пользователя должно раскрывать выпадающий список с выбором языка программирования
    - При выборе типа звукового сопровождения должна проигрываться мелодия этого типа (если громкость в настройках приложения установлена выше 0)
    - При изменении громкости должна проигрываться мелодия выбранного типа (если громкость в настройках приложения установлена выше 0)
    - Кнопка save должна сохранять внесенные изменения 
    - Пользователь не может отвязать аккаунт github или discord если ранее он зарегистрировался с помощью github или discord соответственно 
  - users rating page:
    - Страница рейтинга пользователей должна включать панель выбора периода (неделя, месяц, всё время), количество пользователей в рейтинге, таблицу с результатами и панель пагинации.
    - При переключении на панели выбора периода должно меняться количество пользователей в рейтинге и таблица с результатами 
    - Таблица рейтинга пользователей должна состоять из столбцов №, user, rank, rating, game played, joined, github
    - Столбец github должен содержать ссылку на github пользователя если github пользователя привязан к аккаунту 
    - При наведении на значения в столбце user должна появляться подсказка с краткой информацией о пользователе 
    - Краткая информация о пользователе должна содержать аватарку, ник, язык программирования, ранг, рейтинг, количество выигранных и проигранных игр, количество сдач и эмблемки с достижениями игрока
    - После снятия курсора с ника игрока в таблице краткая информация должна исчезать  
    - Нажатие на ник пользователя в таблице должно вести на страницу его профиля 
    - Таблица рейтинга пользователей должна иметь поиск по имени пользователя, настройки количества пользователей на одной странице (20, 30, 40, 50) и настройка with bots
    - Если в поле для поиска по имени введено значение, то в таблице должны отображаться только пользователи имеющие это значение у себя в имени (если совпадений нет, то пустая таблица)
    - После изменения настройки количества пользователей на одной странице (users per page), должно изменяться число одновременно показанных пользователей в рейтинге 
    - После активации настройки with bots в таблицу рейтинга должны быть включены боты
    - После деактивации настройки with bots должны быть исключены боты из таблицы рейтинга  
    - Информация в таблице рейтинга пользователей должна иметь функцию сортировки по убыванию или возрастанию по следующим полям rank, rating, game played, joined
    - При нажатии на номер страницы на панели пагинации в таблице должна отображаться информация о пользователях с номером от ((номер страницы -1) * количества пользователей на одной странице) и до (номер страницы * количества пользователей на одной странице)
    - При нажатии на одинарную стрелку на панели пагинации отображается информация со следующей или предыдущей страниц соответственно 
    - При нажатии на двойную стрелку на панели пагинации отображается информация первой или последней страницы соответственно 
    - При текущей первой или последней странице одинарная и двойная стрелка с ближайшей стороны не активны 
  - tasks page:
    - Страница со списком задач должна состоять из кнопок "create new task", "task packs" и списка задач
    - Список задач должен быть представлен в виде таблицы со столбцами name, level, tags, origin, state, visibility, action
    - Столбец action должно содержать кнопку show которая ведет на страницу конкретной задачи
    - Кнопка "create new task" должна открывать страницу создания новой задачи
    - Кнопка "task packs" должна вести на страницу со списком пакетов задач 
  - task packs page:
    - Должна иметь список пакетов задач представленный в табличной форме со столбцами name, state, visibility, task_ids, actions
    - Столбец action должен содержать кнопку show для перехода на страницу конкретного пакета задач
    - Должна быть кнопка create new task pack ведущая на страницу создания пакета задач 
    - Должна быть кнопка tasks ведущая обратно на страницу со списком всех задач на сайте 
  - current task pack page: 
    - Страница пакета задач должна содержать информацию visibility (hidden, public), state, creator_id, таблицу задач со столбцами id, name, level, tags, origin, state, visibility и кнопок edit, delete, back
    - Кнопка edit должна открывать страницу для редактирования текущего пакета задач (такая же как и для создания пакета задач)
    - Кнопка delete должна вызывать всплывающее окно с подтверждением действия, после подтверждения удалять пакет задач и возвращать на страницу списка пакетов задач
    - Кнопка back должна возвращать на страницу со списком пакетов задач
  - create task pack page and edit task pack page:
    - Страница создания пакета задач состоит из поля name, выпадающего списка visibility (hidden, public), поля task_ids, кнопок save и back 
    - Поле name должно иметь валидацию на пустое поле 
    - Поле task_ids должно иметь валидацию на пуст
    - Поле task_ids должно иметь валидацию на ввод несуществующих id задач
    - Поле task_ids должно иметь валидацию на ввод значения несоответствующего шаблону (1, 2, 3)
    - Кнопка save должна сохранять созданный пакет задач и открывать страницу созданного пакета задач
    - Кнопка save сохраняет пакет задач если все поля заполнены корректно
    - После успешного создания пакета задач должна появиться панель под шапкой сайта с текстом "TaskPack created successfully." и крестиком для закрытия
    - После успешного изменения пакета задач должна появиться панель под шапкой сайта с текстом "TaskPack updated successfully." и крестиком для закрытия
    - В случае неправильного заполнения полей, после нажатия на кнопку save должна выводиться подсказка об ошибке 
    - Кнопка back возвращает на страницу со списком пакетов задач из интерфейса создания пакета задач
    - Кнопка back возвращает на страницу редактируемого пакета задачи из интерфейса редактирования пакета задач
  - tournaments page:
    - Страница турниров должна состоять из списка турниров в табличной форме и формы для создания нового турнира 
    - Таблица со списком турниров должна иметь следующие столбцы name, type, level, state, starts_at, action
    - Столбец action должен содержать кнопку "show" для перехода на страницу конкретного турнира
    - Форма для создания нового турнира должна состоять из полей name, type, description, start at, access type, task strategy, score strategy, task provider, level, event, players limit, default language, match timeout seconds, break duration seconds, чекбоксов use chat и use timer и кнопки create
    - При выборе типа турнира team в форму добавляются поля Team 1 name, Team 2 name и rounds to win
    - Поля Team 1 name, Team 2 name должны быть обязательными при заполнении формы турнира team 
    - При выборе типа турнира show в форму добавляются поля game passwords json и rounds config json
    - При выборе типа турнира swiss в форму добавляются поля rounds limit и ranking type
    - При выборе типа турнира arena в форму добавляются поля rounds limit, ranking type, round timeout seconds и чекбокс use clan 
    - При выборе в task provider значений task_pack и task_pack_per_round, поле level меняется на поле task pack name
    - При выборе в task provider значения all, поле level исчезает 
    - Поле name должно иметь валидацию на пустое поле 
    - Поле description должно быть обязательным для заполнения 
    - Поле start at должно иметь валидацию на полноту заполнения параметров даты и времени проведения
    - Поле start at не должно иметь возможность выбирать несуществующих дат и месяцев
    - Поле start at не должно позволять выбирать дату начала турнира в прошлом 
    - Кнопка create должна создавать новый турнир в случае если форма для создания была заполнена корректно и открывать страницу созданного турнира
    - Если форма была заполнена не правильно после нажатия на кнопку create должны появляться подсказки об ошибках
  - tournament page:
    - Страница каждого турнира должна содержать информацию о начале турнира или о том что он уже завершен, чат, информацию о кол-ве игроков, описание турнира
    - Если турнир завершен то должна быть кнопка возвращения к списку турниров "Back to tournaments"
    - Если турнир еще не начался должна быть кнопка join для присоединения к турниру (если есть доступ)
    - Нажатие кнопки join добавляет пользователя в список total players
    - Если в списке Total players нет игроков должна отображаться информация "NO_PARTICIPANTS_YET"
    - После нажатия на кнопку join она превращается в кнопку leave
    - Нажатие на кнопку leave убирает пользователя из список total players
    - После нажатия на кнопку leave она превращается в кнопку Join
  - registration page:
    - Страница регистрации должна иметь форму с полями nickname, email, password, password confirmation и кнопкой submit
    - Поле nickname должно иметь валидацию длинны (от 3 до 16)
    - Поле nickname должно иметь валидацию на ввод недопустимых символов (все кроме латинские буквы, цифры и подчеркивания)
    - Поле nickname должно иметь валидацию первого символа-латинской буквы
    - Поле nickname должно иметь валидацию в случае отправки пустого поля
    - Поле nickname должно иметь валидацию на наличие пробелов в начале и в конце значения
    - Поле email должно иметь валидацию на корректность введенного адреса электронной почты
    - Поле email должно иметь валидацию в случае отправки пустого поля
    - Поле password должно иметь валидацию длинны (от 6 до 16)
    - Поле password должно иметь валидацию в случае отправки пустого поля
    - Поле password confirmation должно иметь проверку на совпадение с полем password
    - Поле password confirmation должно иметь валидацию в случае отправки пустого поля
    - Поля nickname, email, password и password confirmation должны иметь подсказку в случае неправильного ввода 
    - Страница регистрации должна иметь кнопки для регистрации с помощью Github и Discord
    - Страница регистрации должна иметь ссылку для перехода на страницу входа
  - login page:
    - Страница входа должна иметь форму с полями email, password и кнопкой submit
    - Поле email должно иметь валидацию на корректность введенного адреса электронной почты
    - Поле email должно иметь валидацию в случае отправки пустого поля
    - Поле password должно иметь валидацию в случае отправки пустого поля
    - Форма входа должен возвращать информацию с текстом ошибки после неудачной попытки входа 
    - Страница входа должна иметь ссылка на восстановление пароля 
    - Страница входа должна иметь ссылку на страницу регистрации
    - Страница входа должна иметь кнопки входа с помощью github и discord 
  - password recovery page:
    - Страница восстановления пароля должна иметь форму с полем email и кнопкой submit
    - Поле email должно иметь валидацию на корректность введенного адреса электронной почты
    - Поле email должно иметь валидацию в случае отправки пустого поля
    - Форма восстановления пароля должна возвращать информацию с текстом ошибки после неудачной попытки выполнения восстановления пароля
    - Страница восстановления пароля должна иметь ссылку для перехода на страницу регистрации 
    - Страница восстановления пароля должна иметь ссылку для перехода на страницу входа 
    - На указанный на странице восстановления пароля email должна приходить инструкция по смене пароля 
    - В инструкции по смене пароля должна быть ссылка на форму для указания нового пароля
    - Поле для ввода нового пароля должно иметь валидацию на длину пароля (От 6 до 16)
    - Поле для ввода нового пароля должно иметь валидацию в случае отправки пустого поля
    - После ввода и отправки нового пароля, пароль пользователя должен быть изменен 
    - Форма для указания нового пароля должна состоять из поля для ввода пароля и кнопки сохранить
  - lobby page:
    - Страница lobby состоит из панели lobby, кнопки create a game, таблицы leaderboard и панели чата (chat)
    - Нажатие на кнопку create a game открывает окно создания игры Create a game
    - lobby panel:
      - Панель lobby состоит из 3 вкладок (lobby, tournaments, history) и верхней панели для переключения между вкладками 
      - lobby tab:
        - Вкладка lobby представляет собой таблицу состоящую из столбцов level (уровень сложности), state, players, actions со списком игр доступных для просмотра или игры
        - Столбец state отражает состояние игры (в ожидании или активна)
        - Столбец Players содержит ники соревнующихся игроков или ник ожидающего игрока 
        - Столбец Action содержит кнопки либо fight если игрок ожидает соперника, либо show если другие игроки уже соревнуются, либо continue если текущий пользователь участвует в игре
        - При наведении курсора на уровень сложности в столбце level отображается письменная подсказка с уровнем сложности 
        - При наведении курсора на значение в столбце state отображается письменная подсказка с текущим состоянием игры 
        - При наведении курсора на ник пользователя в столбце players появляется окно с краткой информацией о пользователе 
        - Окно с краткой информацией о пользователе должно содержать аватарку, ник, язык программирования, ранг, рейтинг, количество выигранных и проигранных игр, количество сдач и эмблемки с достижениями игрока
        - При снятии курсора с ника игрока окно с краткой информацией о пользователе исчезает
        - При нажатии на кнопку show пользователь переходит на страницу игры в качестве зрителя без возможности взаимодействовать с кодом 
        - При нажатии на кнопку fight пользователь переходит на страницу игры в качестве участника 
        - При нажатии на кнопку Continue у игры в списке lobby пользователь переходит к текущей игре если в игре есть оппонент или на страницу со ссылкой на игру если в игре нет оппонента 
        - На странице со ссылкой на игру есть строка с ссылкой и две кнопки copy и cancel
        - Кнопка copy на странице со ссылкой на игру копирует ссылку на игру в буфер обмена
        - Кнопка cancel на странице со ссылкой на игру удаляет созданную игру
        - Нажатие на кнопку copy у созданной игры с типом "with other user" без оппонента в списке lobby копирует ссылку на игру в буфер обмена 
        - Нажатие на крестик у созданной игры с типом "with other user" без оппонента удаляет созданную игру
      - tournaments tab: 
        - Вкладка tournaments состоит из 2 таблиц Live tournaments и Completed tournaments
        - Обе таблицы состоят из столбцов title, starts_at, actions
        - Столбец title содержит название турнира
        - Столбец starts_at содержит дату и время начала турнира 
        - Столбец actions содержит кнопки show для перехода на страницу турнира 
        - При нажатии на кнопку show пользователь переходит на страницу турнира
        - После таблицы Live tournaments располагается ссылка Tournaments Info на страницу со списком турниров
      - history tab:
        - Вкладка history представляет собой таблицу проведенных игр состоящую из столбцов level (уровень сложности), players, date, action
        - Столбец players содержит ники соревновавшихся
        - При наведении курсора на уровень сложности в столбце level отображается письменная подсказка с уровнем сложности 
        - При наведении курсора на ник пользователя в столбце players появляется окно с краткой информацией о пользователе 
        - Окно с краткой информацией о пользователе должно содержать аватарку, ник, язык программирования, ранг, рейтинг, количество выигранных и проигранных игр, количество сдач и эмблемки с достижениями игрока
        - При снятии курсора с ника игрока окно с краткой информацией о пользователе исчезает
        - Столбец Date содержит информацию о дате и времени проведения турнира
        - Столбец Action содержит кнопки show для просмотра подробной информации об игре 
        - Под таблицей находится информация об общем количестве проведенных игр
        - При нажатии на кнопку show пользователь переходит на страницу игры где отображается окно со статусом игры, результатом и датой
        - Данные в список игр на вкладке history должны подгружаться частями после полной прокрутку scroll bar 
    - create a game:
      - Окно создания игры состоит из полей для выбора уровня сложности level, для выбора типа игры game type, ползунка для выбора продолжительности игры time control, выпадающем меню для выбора задач, списком тегов для сужения списка задач и кнопки create battle
      - В случае создания игры с типом "with a friend" должно появляться еще одно поле с выбором оппонента choose opponent а кнопка create battle превращается в create invite
      - Поле choose opponent представляет собой выпадающий список с возможностью поиска пользователей 
      - После ввода в строку поиска в раскрытом списке choose opponent значения в списке остаются пользователи содержащие в имени это значение
      - В случае создания игры с типом "with other user" или "with a friend" после нажатия create battle должно закрыться окно создания игры и открыться главная страница где пользователь будет ждать другого игрока
      - Когда другой игрок выберет присоединиться к игре с типом "with other user" или "with a friend", пользователь создавший игру переместиться на страницу игры
      - В случае создания игры с типом "bot" после нажатия create battle сразу откроется страница с игрой
      - Ползунок для выбора продолжительности игры time control определяет время которое будет отсчитывать таймер на странице с игрой
      - При нажатии на выпадающее меню для выбора задачи раскрывается список для выбора задачи со строкой поиска 
      - После ввода в строку поиска значения в списке остаются задачи содержащие в имени это значение
      - Выпадающее меню Choose task by name or tags закрывается при выборе задачи или при клике в любом месте вне его области
      - Выбор тега из списка тегов оставляет в списке меню для выбора задач только задачи соответствующие этому тегу (есть возможность выбрать несколько тегов)
      - Первым в списке задач располагается пункт выбора рандомной задачи
      - Нажатие на кнопку create battle создает игру с выбранными настройками 
      - Игру созданную с типом "with a friend" можно удалить через кнопку Invites в шапке сайта 
      - Окно создания игры закрывается после создания игры либо на крестик, либо на клик в любом месте вне его области 
    - leaderboard:
      - Панель leaderboard состоит из вкладок week, month, all, таблицы из 7 вошедших в рейтинг пользователей (таблица состоит из ника и рейтинга за выбранный период), ссылки top list  
      - Вкладки week, month, all переключают на рейтинг за выбранный период
      - Ссылка top list ведет на страницу с рейтингом пользователей  
      - При наведении курсора на ник пользователя появляется окно с краткой информацией о пользователе 
      - При снятии курсора с ника игрока окно с краткой информацией о пользователе исчезает
    - chat:
      - Панель чата должна состоять из чата, поля ввода сообщения с кнопками выбора смайлов и отправить, списком онлайн игроков, выпадающим меню выбора чата, кнопками send message, send fight invite
      - При нажатие на название чата должно открываться меню выбора чата 
      - Меню выбора чата должно закрываться при клике в любом месте вне его области или после выбора чата 
      - Выбор чата в меню выбора чата должен приводить к отображению выбранного чата на панели chat 
      - Поле ввода сообщения имеет валидацию на ввод значения больше чем 1024 символа
      - Поле ввода сообщения должно иметь валидацию на отправку пустого сообщения или сообщения только с пробелами
      - После ввода сообщения от 1 до 1024 символов (все не могут быть пробельными) включительно и нажатия кнопки send сообщение должно попадать в текущий чат 
      - После нажатие на кнопку выбора смайла должно открываться всплывающее окно с меню выбора смайликов 
      - Меню выбора смайлов должно закрываться при клике в любом месте вне его области или после выбора смайла
      - Кнопка send message должна открывать окно Send private message со списком онлайн игроков для выбора собеседника
      - Выбор пользователя в окне Send private message создает чат с выбранным пользователем
      - Кнопка send fight invite должна открывать окно Send battle invite со списком онлайн игроков для выбора соперника
      - Выбор пользователя в окне Send fight invite открывает окно для создания игры с преднастройками game type (with a friend), choose opponent (выбранный пользователь)
      - Нажатие правой кнопкой мыши на пользователя в списке онлайн игроков открывается вспомогательное меню с кнопками copy name, info, direct message, send an invite
      - Кнопка copy name копирует в буфер обмена ник пользователя
      - Кнопка info открывает страницу профиля пользователя 
      - Кнопка direct message создает и открывает чат с пользователем 
      - Кнопка send an invite открывает окно для создания игры с типом with a friend с пользователем
  - new game task creation: 
    - Меню создания игры (уровня) должно состоять из панелей step 1, step 2, step 3, step 4
    - step 1:
      - Панель step 1 должна иметь верхнюю панель с переключением между вкладками step 1 и status
      - Вкладка step 1 представляет собой форму с меню выбора уровня сложности задачи, полями для ввода названия и описания, кроме того кнопкой доп. настроек details и выпадающим меню выбора типа поля description (для русского или английского языка)
      - Нажатие на кнопку с выбранный уровнем сложности раскрывает меню для выбора уровня сложности
      - При выборе значения из меню для выбора уровня сложности меняется уровень сложности создаваемой задачи
      - Меню для выбора уровня сложности закрывается после выбора уровня сложности либо после кликав любом месте вне его области
      - Поле для ввода названия задачи Task должно иметь валидацию на допустимую длину от 4 до 1024 символов включительно
      - Поле для ввода названия задачи Task должно иметь валидацию на ввод в поле только пробельных символов
      - Поле для ввода описания Description задачи должно иметь валидацию на допустимую длину от 4 до 1024 символов включительно
      - Поле для ввода описания Description задачи должно иметь валидацию на ввод в поле только пробельных символов
      - При вводе некорректных значений в поля Task и Description должна появляться подсказка под указанным полем
      - Кнопка details при нажатии открывает всплывающее окно с доп настройками
      - Во всплывающем окне есть переключатель с настройкой Available task for all users
      - При активном переключателе Available task for all users после создания и проверки модератором задача видна всем пользователям
      - При выключенном переключателе Available task for all users после создания задача видна только пользователю
      - Чтобы закрыть окно с доп настройками нужно нажать на крестик либо в любом месте вне его области
      - Нажатие на обозначение языка (RU, EN) открывает меню выбора типа поля description (для ввода русского или английского языка)
      - При переключении между типами полей description (для ввода русского или английского языка) ранее введенная информация должна сохраняться 
      - После выбора типа поля description или нажатия в любом месте вне его области меню выбора поля description закрывается
      - Вкладка Status отражает информацию о полноте заполнения данных для создания новой задачи
    - step 2:
      - Панель step 2 состоит из верхней панели с вкладками, из кнопок add input parameters (+), edit output parameters, add examples и панели со статусом задачи (draft, blank), кнопками upload, testing, save 
      - Нажатие на кнопку add input parameters (+) открывает вкладку INPUT со списком input types и формой для добавления элементов в список
      - Форма для добавления элементов в input types состоит из полей name, меню выбора типа данных, кнопок submit, сброса введенных данных и кнопки закрытия вкладки
      - Поле name имеет валидацию на ввод не латинских букв 
      - Поле name имеет валидацию на ввод строки длиннее 20 символов 
      - Поле name имеет валидацию на пустое поле
      - Поле name имеет валидацию на содержание спец символов 
      - При вводе значения в поле name в списке input types предварительно отображаются введенные данные
      - При выборе типов данных array и hash во вкладках INPUT и OUTPUT должно появляться дополнительное поле с выборам типа данных array или hash
      - Не должно быть возможности создавать массивы с уровнем вложенности больше 3 для Input types и Output types
      - Кнопка submit добавляет значение с именем name и выбранным типом в список input types
      - Кнопка сброса введенных значений удаляет из поля name введенные данные и устанавливает поле Type в значение integer
      - Кнопка закрытия вкладки INPUT закрывает вкладку и открывает базовую вкладку step 2
      - Вкладку INPUT можно закрыть на крестик в верхнем правом углу 
      - Нажатие на кнопку edit output parameters открывает вкладку OUTPUT
      - Вкладка OUTPUT можно закрыть на крестик в верхнем правом углу 
      - Вкладка OUTPUT состоит из поля где указан текущий выбранный тип выходных данных и формой для выбора типа выходных данных
      - Форма для выбора типа выходных данных состоит из меню выбора типа данных, кнопки update и кнопки возврата выходных данных в исходное состояние (integer)
      - Кнопка update сохраняет выбранное значение типа выходных данных 
      - После заполнения параметров на вкладке INPUT становится активной кнопка add examples
      - Нажатие на кнопку add examples открывает вкладку EXAMPLE которая состоит из подсказки (о типе входных и выходных данных), списка примеров examples и формы для добавления примеров example value edit
      - Форма example value edit состоит из поля для входных значений, поля для выходных значений, кнопки submit, кнопки очистки полей и кнопки закрытия вкладки EXAMPLE 
      - Поле входных данных имеет валидацию на соответствие выбранным типам входных данных
      - Поле входных данных имеет валидацию на ввод входных данных не в виде массива ([данные])
      - Поле входных данных имеет валидацию на пустое поле 
      - Поле выходных данных имеет валидацию на соответствие выбранному типу выходных данных
      - Поле выходных данных имеет валидацию на пустое поле 
      - При вводе данных в форму example value edit в списке examples отображаются предварительно введенные данные
      - Кнопка submit добавляет корректно заполненные данные из формы example value edit в список примеров examples
      - Кнопка очистки данных удаляет введенные значения в поля входных и выходных данных
      - Кнопка закрытия вкладки EXAMPLE закрывает вкладку EXAMPLE и переключает на вкладку step 2
      - Вкладка EXAMPLE можно закрыть на крестик в верхнем правом углу 
      - На вкладке EXAMPLE и INPUT нажатие кнопки удалить у элементов из списков Example Value Edit и Input types соответственно должно удалять созданные примеры Examples и типы данных Input types
      - На вкладке EXAMPLE и INPUT нажатие кнопки редактировать у элементов из списков Example Value Edit и Input types соответственно должно переводить эти элементы в режим редактирования
      - На стартовой вкладке step 2 отображаются созданные типы данных Input types и примеры Examples с кнопками редактировать и удалить
      - На стартовой вкладке step 2 нажатие кнопки удалить у типа данных Input type и примера Example должно удалять созданные типы данных Input types и примеры Examples
      - На стартовой вкладке step 2 нажатие кнопки редактирования у типа данных Input type, Output type и примера Example должно переводить в режим редактирования на вкладку INPUT, OUTPUT, EXAMPLE соответственно
      - После смены типа Input type или Output type созданные примеры Examples исчезают 
      - При нажатии на кнопку Testing интерфейс страницы меняется на интерфейс для предварительного просмотра задачи (такой же как и интерфейс игры, кроме панели с чатом)
      - Панель с чатом в интерфейсе для предварительного просмотра задачи состоит из пустой области которая условно помечена как область чата и кнопки Back to task
      - Кнопка Back to task в интерфейсе для предварительного просмотра задачи возвращает пользователя в интерфейс редактирования задачи
      - Кнопка save активируется только после корректного ввода 3 и более примеров на вкладке EXAMPLE
      - Кнопка save должна быть не активна пока пользователь не заполнил корректно все шаги 
      - Нажатие на кнопку save после корректно введенных данных на всех 4 шагах вызывает всплывающее окно Confirm task creation где отображается информация о задаче
      - Всплывающее окно Confirm task creation закрывается на крестик, кнопку confirm или при клике в любом месте вне его области
      - Нажатие на кнопку confirm в окне Confirm task creation активирует отображение еще 2 кнопок copy и publish
      - Нажатие на кнопку copy открывает всплывающее окно Copy task json model с переключателем Show JSON, JSON задачи и кнопкой copy 
      - Всплывающее окно Copy task json model закрывается на крестик или при клике в любом месте вне его области
      - Переключатель Show JSON управляет отображением JSON в окне Copy task json model
      - Кнопка copy копирует JSON и меняет свой текст на copied 
      - Кнопка publish отправляет задачу на проверку модератора и отображает сообщение об этом 
    - step 3:
      - Панель step 3 состоит из верхней панели со статусом проверки корректного заполнения панели, кнопок включения редактора vim, изменения внешнего вида редактора (light, dark), reset, reject и редактора кода 
      - Перед началом редактирования кода панель Step 3 не активна и имеет кнопку generate solution которая генерирует шаблон заполнения панелей step 3 и step 4
      - Кнопка vim активирует/деактивирует редактор кода vim 
      - Кнопка Light/Dark меняет визуальный стиль редактора кода 
      - Кнопка reset сбрасывает код до стартового значения
      - Кнопка reject блокирует панель step 3 и step 4 и активирует кнопку generate solution которая заново генерирует шаблон заполнения панелей step 3 и step 4
    - step 4:
      - Панель step 4 состоит из верхней панели со статусом проверки корректного заполнения панели, кнопкой asserts, информацией о текущем языке программирования и редактором кода 
      - Кнопка asserts активируется после верного заполнения всех шагов и нажатия кнопки save на панели step 2
      - Нажатие на кнопку asserts отображает в пространстве редактора кода информацию о прохождении тестов введенным решением
      - После нажатия кнопка asserts превращается в кнопку code 
      - Кнопка code возвращает пользователя в пространство для редактирования кода 
  - game page: 
    - Страница для решения задачи состоит из панели (taskbar) с вкладками task, output и таймером, панели чата (chat), панели для редактирования своего кода (own code) и панели отображающей код соперника (opponent code)
    - taskbar:
      - Панель с вкладкой task (условие задачи), output (результатом тестов) и таймером должна иметь функционал переключения между вкладками task и output
      - На вкладке task должно отображаться условие задачи
      - На вкладке task под условием задачи должна быть ссылка на github пользователя создавшего задачу
      - На вкладке Output должны отображаться результаты тестов решения пользователя 
      - Окно с условием задачи task должно иметь выпадающее меню с выбором языка, кнопку открытия условия задачи в отдельном окне и кнопку show guide 
      - Кнопка открытия условия задачи в отдельном окне должна открывать отдельное окно с условием задачи
      - Выпадающее меню с выбором языка должно открываться при нажатии на кнопку с текущим языком
      - Выпадающее меню с выбором языка должно закрываться после выбора языка или при клике в любом месте вне его области
      - После выбора другого языка описания задачи, язык описания задачи должен измениться 
      - Кнопка show guide должна включать последовательность подсказок о использовании интерфейса состоящих из заголовка, описания, кнопки Skip guide, next, крестик, кнопки last (на последней подсказке) и кнопки back (на всех кроме первой подсказки)
      - Последовательность подсказок должна активироваться при переходе пользователя в его первую игру
      - Подсказки "show guide" должны пролистываться на кнопку next 
      - Подсказки "show guide" должны закрываться на кнопку Skip guide
      - Подсказки "show guide" должны отображать в кнопке next какая по счету из скольки (1/8) подсказок активна 
      - Подсказки "show guide" должны сворачиваться при нажатии на крестик (кроме последней подсказки)
      - После сворачивания подсказки "show guide" активируется следующая подсказка в свернутом виде (в виде мигающего синего кружочка)
      - Чтобы снова раскрыть подсказки "show guide" нужно нажать на мигающий синий кружочек 
      - Должна быть возможность переключаться между подсказками в обратном порядке на кнопку back
      - На первой подсказке "show guide" должна отсутствовать кнопка back 
      - На последней подсказке "show guide" вместо кнопки next должна быть кнопка last, а кнопки Skip guide быть не должно
      - Кнопка last на последней подсказке "show guide" должна закрывать подсказки 
      - Крестик на последней подсказке должен закрывать подсказки
      - Условие задачи открытое в отдельном окне должно закрываться на крестик в верхнем правом углу, кнопку close либо на клик по пространству вне окна
      - Условие задачи открытое в отдельном окне должно иметь выпадающий список с выбором языка
      - Выпадающее меню (в отдельном окне с условием задачи) с выбором языка должно открываться при нажатии на кнопку с текущим языком
      - Выпадающее меню (в отдельном окне с условием задачи) с выбором языка должно закрываться после выбора языка или при клике в любом месте вне его области
      - Таймер на панели переключения вкладок task и output должен вести обратный отчет от времени выбранного при создании игры
    - chat:
      - Панель чата должна состоять из чата, поля ввода сообщения с кнопками выбора смайлов и отправить, списком онлайн игроков в данной игре, выпадающим меню выбора чата, кнопками open history, back to home, подсказкой о том кто победил и кнопкой rematch после завершения игры
      - При нажатие на название чата должно открываться меню выбора чата 
      - Меню выбора чата должно закрываться при клике в любом месте вне его области или после выбора чата 
      - Выбор чата в меню выбора чата должен приводить к отображению выбранного чата на панели chat 
      - Поле ввода сообщения имеет валидацию на ввод значения больше чем 1024 символа
      - Поле ввода сообщения должно иметь валидацию на отправку пустого сообщения или сообщения только с пробелами
      - Сообщение прошедшее валидацию в поле для ввода сообщений должно отправляться в чат после нажатия на кнопку send
      - После нажатие на кнопку выбора смайла должно открываться всплывающее окно с меню выбора смайликов 
      - Меню выбора смайлов должно закрываться при клике в любом месте вне его области или после выбора смайла
      - Кнопка Open History должна включать вспомогательного интерфейса History с временной шкалой timeline, кнопкой play, и кнопкой для настройки timeline поверх окна с игрой
      - History:
        - Кнопка Open History должна блокировать редактирование кода и написание сообщений после нажатия 
        - Перемещение по шкале timeline в вспомогательном интерфейсе history должно отражать в редакторах кода и чате последовательность действий пользователей за игру
        - Нажатие на кнопку play в вспомогательном интерфейсе history должно проигрывать в редакторах кода последовательность действий пользователей от текущего положения timeline до конца
        - При нахождении ползунка timeline в самом конце нажатие на кнопку play воспроизводит последовательность действий пользователей от начала игры до конца
        - Во время воспроизведения последовательности действий пользователя кнопка play меняется на stop 
        - Нажатие на кнопку stop останавливает воспроизведение последовательности действий пользователей
        - Нажатие на кнопку для настроек открывает меню с кнопками х2 и кнопки для копирования
        - Кнопка x2 увеличивает скорость воспроизведения последовательности действий пользователей в 2 раза при воспроизведении на кнопку play
        - Кнопка для копирования копирует ссылку на игру с сохраненным положением timeline в вспомогательном интерфейсе history 
        - Переход по ссылке скопированной из настроек меню timeline открывает игру на которой была скопирована ссылка, с сохраненным положением timeline на момент копирования
        - Открытие вспомогательного интерфейса History в игре в которую пользователь перешел по ссылке скопированной из настроек timeline должно сразу отражать состояние редакторов кода на установленном в timeline моменте
      - После окончания игры должно появляться уведомление с результатами игры 
      - Кнопка back to home должна возвращать игрока на главную страницу (lobby)
      - Кнопка rematch в случае игры с ботом должна запускать игру заново с сохранением информации о текущем счете пользователей
      - Кнопка rematch в случае игры с пользователем должна активировать у оппонента запрос о повторном проведении игры с кнопками принять и отклонить 
      - У пользователя нажавшего кнопку rematch вместо кнопки rematch должно отображаться сообщение "wait for answer"
      - Запрос о повторном проведении игры отображается вместо кнопки rematch у оппонента 
      - Кнопка принять в запросе о повторном проведении игры должна приводить к старту новой игры с сохранением информации о текущем счете
      - Кнопка отклонить в запросе о повторном проведении игры должна приводить к отображению у обоих пользователей вместо запроса о повторном проведении игры и сообщения "wait for answer" элемент с надписью "rejected offer"
      - Список онлайн игроков в данной игре (online players) должен состоять из игроков у которых открыта страница данной игры
    - own code:
      - Панель с кодом должна состоять из пространства для написания кода, верхней панели с выпадающим меню выбора языка программирования, кнопок активации редактора vim и переключения стиля редактора, кнопок сдаться (give up), reset solution, проверки решения, а так же ника пользователя и счета игрока (после первой игры)
      - Выпадающее меню выбора языка программирования должна открываться после нажатия на язык программирования на верхней панели
      - Выпадающее меню выбора языка программирования должно закрываться при клике в любом месте вне его области или после выбора языка 
      - После выбора другого языка программирования должен меняться стартовый шаблон для решения задачи
      - Кнопка vim активирует и деактивирует редактор кода vim 
      - Кнопка Dark (Light) изменяет визуальный стиль редактора кода 
      - После нажатия кнопки Dark она меняется на Light и наоборот 
      - Нажатие кнопки сдаться вызывает всплывающее окно с подтверждением действия
      - После подтверждения сдачи игра завершается, оппонент побеждает 
      - После подтверждения сдачи всплывает окно с уведомлением о поражении
      - После подтверждения сдачи проигрывается трек для поражения
      - После подтверждения сдачи на верхней панели отображается счет пользователя
      - Окно с уведомлением о поражении можно закрыть на крестик, на кнопку I'll be back, нажатие в любом месте вне его области
      - Нажатие на кнопку reset solution возвращает код в стартовое состояние
      - Нажатие на кнопку проверки решения (Run) активирует звуковой эффект
      - Нажатие на кнопку проверки решения (Run) переключает на вкладку output на панели taskbar 
      - Нажатие на кнопку проверки решения (Run) открывает окно с уведомлением о победе (в случае если решение верное)
      - Нажатие на кнопку проверки решения (Run) (в случае если решение верное) включает отображение счета пользователя на верхней панели 
      - Окно с уведомлением о победе можно закрыть на крестик, на кнопку GG, нажатие в любом месте вне его области
    - opponent code:
      - Панель с кодом оппонента состоит из верхней панели с языком программирования соперника, его ника и счета (после окончания первой игры), под панелью располагается пространство с кодом или результатами тестов соперника, ниже располагается нижняя панель с кнопками переключения между тестами и кодом соперника (editor) 
      - Кнопка Editor на нижней панели должна активировать отображение кода соперника
      - Кнопка рядом с кнопкой Editor ("Press check solution or press give up") должна активировать отображение тестов решения соперника
      - После завершения первой игры на верхней панели должен отобразиться счет соперника
  - footer:
    - Футер должен состоять из ссылки на сайт Хекслет и ссылки на текущий коммит на github
  - other:
    - Информация о проведенных играх должна храниться на сервере
    - Информация о пользователях, их взаимодействии и настройках должна храниться на сервере 
    - Сайт должен быть безопасным и защищать данные пользователя
    - Сайт должен быть кросплатформенным 
    - Сайт должен быть кросбраузерным
    - Сайт должен быть адаптивным 
    - Сайт должен быть способен обработать 1000 одновременных пользователей
    - Сайт должен быть способен масштабироваться для обработки увеличившегося числа пользователей без потери производительности
    - Сайт должен быть доступным для пользователей с ограниченными возможностями
    - Сайт должен быть отказоустойчив и обеспечивать возможность восстановления после сбоев без потери данных
    - Сайт должен обеспечивать быструю загрузку страницы и выполнения операций
    - Сайт должен быть легко расширяем для добавления новых функций и изменения существующих 
    - Сайт должен автоматически собирать и анонимно хранить статистическую информацию об использовании приложения
implicit:
  - Весь контент любой страницы должен быть выравнен по центру (по горизонтали) 
  - Информация о онлайн игроках должна обновляться в "реальном времени"
  - Информация о играх в lobby должна обновляться в "реальном времени"
  - В чатах сообщение должно состоять из имени отправителя, времени отправления и сообщения
  - Переключения между страницами должны происходить без перезагрузки страницы 
  - Всплывающие окна должны закрывать на крестик в верхнем правом углу и на нажатие по области экрана за пределами всплывающего окна 
  